/*
 * MainWindow.java
 *
 * Created on __DATE__, __TIME__
 */

package edu.csu.speedo.ui;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.Timer;
import java.util.Vector;

import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

import edu.csu.speedo.download.ReadAssignFile;
import edu.csu.speedo.download.WriteAssignFile;
import edu.csu.speedo.model.ModelUser;


/**
 *
 * @author  __USER__
 */
public class MainWindow extends javax.swing.JFrame {

	/** Creates new form MainWindow */
	//»»·ô±³¾°Í¼Æ¬
	static String imageName = "img/background5.jpg";
	static Image image = Toolkit.getDefaultToolkit().getImage(imageName);
	//µ±Ç°Ê¹ÓÃµÄModelNum
	public static int modelNum = 0;

	//Ö÷´°Ìå
	public MainWindow() {
		
		try {
			new ReadAssignFile().readAssignFile();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		this.addWindowListener(new WindowClose());
		setWindowIcon();
		initComponents();
		//		jTable1.setCellEditor(anEditor)

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel1 = new JImagePane(image, JImagePane.SCALED);
		jButton8 = new javax.swing.JButton();
		jToolBar1 = new javax.swing.JToolBar();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jToolBar2 = new javax.swing.JToolBar();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jComboBox1 = new javax.swing.JComboBox();
		jTextField1 = new javax.swing.JTextField();
		jButton9 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable(){
			// ÉèÖÃjtableµÄµ¥Ôª¸ñÎªÍ¸Ã÷µÄ  
			 public Component prepareRenderer(TableCellRenderer renderer,int row,int column) 
			{    Component c = super.prepareRenderer(renderer, row, column);    
			if (c instanceof JComponent)
			 {     
			((JComponent) c).setOpaque(false);  
			  }  
			  return c;  
			 }
			};
			
//		jScrollPane1.setOpaque(false);
//		jScrollPane1.getViewport().setOpaque(false);
//		jTable1.setShowGrid(false);//ÉèÖÃÎÞ±ß¿ò
		  

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Speedo\u4e0b\u8f7d\u5668");
//		setBounds(new java.awt.Rectangle(450, 200, 0, 0));
		
		Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
		int width = 900;
		int height = 600;
		setBounds((d.width - width) / 2, (d.height - height) / 2, width, height);
		

		jPanel1.setBackground(new java.awt.Color(51, 204, 255));
		jPanel1.setAlignmentX(0.0F);
		jPanel1.setAlignmentY(0.0F);

		jButton8.setIcon(new javax.swing.ImageIcon(
				"img/skin.png")); // NOI18N
		jButton8.setSize(50, 50);
		jButton8.setToolTipText("Ï²»¶Ê²Ã´µÄ±³¾°£¬ÄãµÄÏÂÔØÆ÷Äã×öÖ÷£¡");
		jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButton8MouseClicked(evt);

			}
		});
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8ActionPerformed(evt);
			}
		});

		jToolBar1.setFloatable(false);
		jToolBar1.setOrientation(1);
		jToolBar1.setRollover(true);

		jButton1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 1, 14));
		jButton1.setIcon(new javax.swing.ImageIcon(
				"img/all.png")); // NOI18N
		jButton1.setFocusable(false);
		jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton1.setText("\u5168\u90e8\u4efb\u52a1     ");
		jButton1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton1);

		jButton2.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 1, 14));
		jButton2.setIcon(new javax.swing.ImageIcon(
				"img/doing.png")); // NOI18N
		jButton2.setFocusable(false);
		jButton2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton2.setText("\u6b63\u5728\u4e0b\u8f7d     ");
		jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton2);

		jButton3.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 1, 14));
		jButton3.setIcon(new javax.swing.ImageIcon(
				"img/doned.png")); // NOI18N
		jButton3.setText("\u4e0b\u8f7d\u5b8c\u6210     ");
		jButton3.setFocusable(false);
		jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton3);

		jToolBar2.setFloatable(false);
		jToolBar2.setRollover(true);
		jToolBar2.setAlignmentY(0.5F);

		jButton4.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 18));
		jButton4.setIcon(new javax.swing.ImageIcon(
				"img/new.png")); // NOI18N
		jButton4.setFocusable(false);
		jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton4.setLabel("\u65b0\u5efa");
		jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButton4MouseClicked(evt);
			}
		});
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});
		jToolBar2.add(jButton4);

		jButton5.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 18));
		jButton5.setIcon(new javax.swing.ImageIcon(
				"img/resume.png")); // NOI18N
		jButton5.setFocusable(false);
		jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton5.setLabel("\u5f00\u59cb");
		jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});
		jToolBar2.add(jButton5);

		jButton6.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 18));
		jButton6.setIcon(new javax.swing.ImageIcon(
				"img/stop.png")); // NOI18N
		jButton6.setText("\u6682\u505c");
		jButton6.setFocusable(false);
		jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});
		jToolBar2.add(jButton6);

		jButton7.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 18));
		jButton7.setIcon(new javax.swing.ImageIcon(
				"img/stop2.png")); // NOI18N
		jButton7.setText("\u5220\u9664");
		jButton7.setFocusable(false);
		jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});
		jToolBar2.add(jButton7);
		
		jTable1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 1, 13));
		jTable1.setModel(ModelUser.dateModel);
		jTable1.setRowHeight(45);
		jTable1.setOpaque(false);
		jTable1.setShowGrid(false);
		
		jScrollPane1.setViewportView(jTable1);
		jScrollPane1.setOpaque(false);
		jScrollPane1.getViewport().setOpaque(false);
		

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Í¼Æ¬", "ÒôÀÖ", "ÊÓÆµ" }));
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});
		jToolBar2.add(jComboBox1);

		jTextField1.setForeground(new java.awt.Color(153, 153, 153));
		jTextField1.setText("\u97f3\u4e50/\u56fe\u7247/\u89c6\u9891");
		jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jTextField1MouseClicked(evt);
			}
		});
		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionPerformed(evt);
			}
		});
		jToolBar2.add(jTextField1);
		//123
		jButton9.setIcon(new javax.swing.ImageIcon(
				"img/find.png"));
		//123
		//jButton9.setText("\u641c\u7d22");
		jButton9.setFocusable(false);
		jButton9.setToolTipText("ÐèÒªÊ²Ã´×ÊÔ´£¬ËÑÒ»ÏÂ£¿");
		jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton9.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton9ActionPerformed(evt);		
			}
		});
		jToolBar2.add(jButton9);

//		jTable1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 10));
//		jTable1.setModel(new javax.swing.table.DefaultTableModel(
//				new Object[][] {
//
//				}, new String[] { "×´Ì¬", "ÎÄ¼þÃû", "´óÐ¡", "½ø¶È", "ËÙ¶È", "Ê£ÓàÊ±¼ä" }) {
//			boolean[] canEdit = new boolean[] { false, false, false, false,
//					false, false };
//
//			public boolean isCellEditable(int rowIndex, int columnIndex) {
//				return canEdit[columnIndex];
//			}
//		});
//		jTable1.setRowHeight(28);
//		jScrollPane1.setViewportView(jTable1);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(
												jToolBar1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												138,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jScrollPane1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																612,
																Short.MAX_VALUE)
														.addComponent(
																jToolBar2,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																612,
																Short.MAX_VALUE)))
						.addComponent(jButton8,
								javax.swing.GroupLayout.Alignment.TRAILING,
								javax.swing.GroupLayout.PREFERRED_SIZE, 20,
								javax.swing.GroupLayout.PREFERRED_SIZE));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(
												jButton8,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												21,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(66, 66, 66)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																jToolBar1,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																443,
																Short.MAX_VALUE)
														.addGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																jPanel1Layout
																		.createSequentialGroup()
																		.addComponent(
																				jToolBar2,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				43,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				392,
																				Short.MAX_VALUE)))
										.addGap(52, 52, 52)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

//		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//ËÑË÷ÊÂ¼þÏìÓ¦
		String key = jTextField1.getText();
		String s=(String)jComboBox1.getSelectedItem();
		System.out.println(123123);
		if(s.equals("Í¼Æ¬"))
		{
			String keyUrl = "http://image.baidu.com/i?word="+key;
			try {
				Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " +keyUrl);
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		else if(s.equals("ÒôÀÖ"))
		{
			String keyUrl =  "http://music.baidu.com/search?key="+key;
			try {
				Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + keyUrl);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		else
		{//ÊÓÆµ
			String keyUrl =  "http://video.baidu.com/v?word="+key;
			try {
				Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + keyUrl);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}

	private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		//ËÑË÷¿ò
		jTextField1.setText("");
	}

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	//´°¿Ú¹Ø±ÕÀà
		class WindowClose extends WindowAdapter
		{
			public void windowClosing(WindowEvent e)
			{
				System.out.println("closing");
				try {
					WriteAssignFile.writeFile();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		}
	//Êä³öModleUser
	//	public  void saveModel()
	//	{
	//
	//		try {
	//			FileOutputStream fo = new FileOutputStream("C:/Users/lin/Desktop/testfile/spddate");
	//			ObjectOutputStream os = new ObjectOutputStream(fo);
	//			os.writeObject(ModelUser.dateModel);
	//			os.flush();
	//			
	//		} catch (FileNotFoundException e) {
	//			// TODO Auto-generated catch block
	//			e.printStackTrace();
	//		} catch (IOException e) {
	//			// TODO Auto-generated catch block
	//			e.printStackTrace();
	//		}	
	//	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//ÒÑÍê³É´¥·¢ÊÂ¼þ
		jTable1.setModel(ModelUser.dateModelFinish);
		modelNum = 2;
	}

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//ÔÝÍ£°´Å¥´¥·¢ÊÂ¼þ
		if (modelNum == 0) {//È«²¿ÈÎÎñ
			int stopNum = jTable1.getSelectedRow();
			if (stopNum != -1) {
				ModelUser.getRunn(stopNum).terminate();
				ModelUser.setValue("ÔÝÍ£", stopNum, 0);
				//Í¬Ê±Ë¢ÐÂÕýÔÚÏÂÔØTable
				String src = ModelUser.getRowUrl(stopNum);
				int index = ModelUser.getRowDL(src);
				ModelUser.setValueDLModel("ÔÝÍ£", index, 0);
			}
		} else if (modelNum == 1) {//ÕýÔÚÏÂÔØ
			int stopNum = jTable1.getSelectedRow();
			if (stopNum != -1) {
				ModelUser.getRunnDL(stopNum).terminate();
				ModelUser.setValueDLModel("ÔÝÍ£", stopNum, 0);
				//Í¬Ê±Ë¢ÐÂÈ«²¿ÈÎÎñTable
				String src = ModelUser.getRowUrlDL(stopNum);
				int index = ModelUser.getRow(src);
				ModelUser.setValue("ÔÝÍ£", index, 0);
			}
		}
		//ÒÑÍê³É...
	}

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//É¾³ý°´Å¥´¥·¢ÊÂ¼þ
		//		Timer time = new Timer();

		int Rnum = JOptionPane.showConfirmDialog(null, "ÊÇ·ñÔÚÉ¾³ýÈÎÎñµÄÍ¬Ê±É¾³ýÔ´ÎÄ¼þ£¿",
				"ÇëÑ¡Ôñ", JOptionPane.YES_NO_CANCEL_OPTION);
		if (Rnum == 0) //ÊÇ
		{
			System.out.println("11111111111");
			int deleteNum = jTable1.getSelectedRow();
			if (deleteNum != -1) {
				if (modelNum == 0) {//´ÓÈ«²¿ÈÎÎñTableÉ¾³ý
					String finishFlat = ModelUser.getResInf(deleteNum).get(4)
							.toString(); //ÊÇ·ñÍê³É±êÊ¶
					if (finishFlat.equals("false")) {//ÅÐ¶ÏÈÎÎñÊÇ·ñÒÑ¾­ÏÂÔØÍê³É
						ModelUser.getRunn(deleteNum).terminate(); //ÔÝÍ£Ñ¡¶¨Ïß³Ì
						ModelUser.runnables.get(deleteNum).setDestory(); //ÖÐÖ¹Ïß³Ì
					}
					ModelUser.removeRow(deleteNum); //É¾³ýÁÐ±íÖÐ¶ÔÓ¦ÁÐ
					String src = ModelUser.getRowUrl(deleteNum); //·µ»Ø´ËÈÎÎñURL£¨Î¨Ò»£©
					ModelUser.removeUrl(deleteNum); //É¾³ýurlsÖÐ¶ÔÓ¦url
					ModelUser.removeRunnable(deleteNum); //É¾³ýrunnables¶ÔÓ¦runnable
					ModelUser.removeVector(deleteNum); //É¾³ývectorÁÐ±í´æ´¢¶ÔÓ¦ÁÐÐÅÏ¢µÄvector

					if (finishFlat.equals("false")) {//Èç¹ûÎÄ¼þÕýÔÚÏÂÔØ,É¾³ýÕýÔÚÏÂÔØÁÐ±í¶ÔÓ¦µÄËùÓÐÐÅÏ¢
						int deleteDLnum = ModelUser.getRowDL(src);
						ModelUser.removeRowDLModel(deleteDLnum);
						ModelUser.removeUrlDL(deleteDLnum);
						ModelUser.removeRunnableDL(deleteDLnum);
					} else {//ÎÄ¼þÒÑÍê³É
						int deleteFSnum = ModelUser.getRowFS(src);
						ModelUser.removeRowFSModel(deleteFSnum);
						ModelUser.removeUrlFS(deleteFSnum);
					}
					//´ÓallDownloadDateInfÖÐ»ñÈ¡¶ÔÓ¦µÄÎÄ¼þ´æ´¢dest=============================
					String dest = ModelUser.getResInf(deleteNum).get(1)
							.toString();
					System.out.println(dest);

					File file = new File(dest + "/"
							+ ModelUser.getResInf(deleteNum).get(3).toString());
					if (file.exists()) {//É¾³ýÎÄ¼þ
						file.delete();
					}
					File asfile = new File(dest + "/"
							+ ModelUser.getResInf(deleteNum).get(2).toString()
							+ ".spd");
					if (asfile.exists()) {//É¾³ýÅäÖÃÎÄ¼þ
						asfile.delete();
					}
					ModelUser.removeResInf(deleteNum); //É¾³ýresourceInfÖÐ¶ÔÓ¦µÄresourceinf vector
				} else if (modelNum == 1) {//´ÓÕýÔÚÏÂÔØTableÉ¾³ý
					ModelUser.getRunn(deleteNum).terminate(); //ÔÝÍ£Ñ¡¶¨Ïß³Ì
					ModelUser.runnablesDL.get(deleteNum).setDestory(); //ÖÐÖ¹Ïß³Ì
					String src = ModelUser.getRowUrlDL(deleteNum); //ÌáÈ¡URL £¨È«¾ÖÎ¨Ò»£©
					//½«ÕýÔÚÏÂÔØ¶ÔÓ¦ÐÅÏ¢É¾³ý
					ModelUser.removeUrlDL(deleteNum);
					ModelUser.removeRowDLModel(deleteNum);
					ModelUser.removeRunnableDL(deleteNum);
					//É¾³ýÈ«²¿ÐÅÏ¢Table¶ÔÓ¦µÄÊý¾Ý
					int deleteNumAll = ModelUser.getRow(src);
					ModelUser.removeRow(deleteNumAll);
					ModelUser.removeRunnable(deleteNumAll);
					ModelUser.removeUrl(deleteNumAll);
					ModelUser.removeVector(deleteNumAll);

					//´ÓallDownloadDateInfÖÐ»ñÈ¡¶ÔÓ¦µÄÎÄ¼þ´æ´¢dest=============================
					String dest = ModelUser.getResInf(deleteNumAll).get(1)
							.toString();
					File file = new File(dest
							+ "/"
							+ ModelUser.getResInf(deleteNumAll).get(3)
									.toString());
					if (file.exists()) {//É¾³ýÎÄ¼þ
						file.delete();
					}
					File asfile = new File(dest
							+ "/"
							+ ModelUser.getResInf(deleteNumAll).get(2)
									.toString() + ".spd");
					if (asfile.exists()) {//É¾³ýÅäÖÃÎÄ¼þ
						asfile.delete();
					}
					ModelUser.removeResInf(deleteNumAll); //É¾³ýresourceInfÖÐ¶ÔÓ¦µÄresourceinf vector					
				} else {//´ÓÏÂÔØÍê³ÉTableÉ¾³ý
						//½«ÏÂÔØÍê³É¶ÔÓ¦ÐÅÏ¢É¾³ý
					String src = ModelUser.getRowUrlFS(deleteNum); //ÌáÈ¡URL £¨È«¾ÖÎ¨Ò»£©
					ModelUser.removeRowFSModel(deleteNum);
					ModelUser.removeUrlFS(deleteNum);
					//É¾³ýÈ«²¿ÐÅÏ¢Table¶ÔÓ¦µÄÊý¾Ý
					int deleteNumAll = ModelUser.getRow(src);
					ModelUser.removeRow(deleteNumAll);
					ModelUser.removeRunnable(deleteNumAll);
					ModelUser.removeUrl(deleteNumAll);
					ModelUser.removeVector(deleteNumAll);

					//´ÓallDownloadDateInfÖÐ»ñÈ¡¶ÔÓ¦µÄÎÄ¼þ´æ´¢dest=============================
					String dest = ModelUser.getResInf(deleteNumAll).get(1)
							.toString();
					File file = new File(dest
							+ "/"
							+ ModelUser.getResInf(deleteNumAll).get(3)
									.toString());
					if (file.exists()) {//É¾³ýÎÄ¼þ
						file.delete();
					}
					File asfile = new File(dest
							+ "/"
							+ ModelUser.getResInf(deleteNumAll).get(2)
									.toString() + ".spd");
					if (asfile.exists()) {//É¾³ýÅäÖÃÎÄ¼þ
						asfile.delete();
					}
					ModelUser.removeResInf(deleteNumAll); //É¾³ýresourceInfÖÐ¶ÔÓ¦µÄresourceinf vector
				}
			}
		}
		if (Rnum == 1) //·ñ
		{
			int deleteNum = jTable1.getSelectedRow();
			if (deleteNum != -1) {
				if (modelNum == 0) {//´ÓÈ«²¿ÈÎÎñTableÉ¾³ý
					String finishFlat = ModelUser.getResInf(deleteNum).get(4)
							.toString(); //ÊÇ·ñÍê³É±êÊ¶
					System.out.println(finishFlat);
					if (finishFlat.equals("false")) //ÅÐ¶ÏÈÎÎñÊÇ·ñÒÑ¾­ÏÂÔØÍê³É
						ModelUser.runnables.get(deleteNum).setDestory(); //ÖÐÖ¹Ïß³Ì

					ModelUser.removeRow(deleteNum); //É¾³ýÁÐ±íÖÐ¶ÔÓ¦ÁÐ
					String src = ModelUser.getRowUrl(deleteNum); //·µ»Ø´ËÈÎÎñURL£¨Î¨Ò»£©
					ModelUser.removeUrl(deleteNum); //É¾³ýurlsÖÐ¶ÔÓ¦url
					ModelUser.removeRunnable(deleteNum); //É¾³ýrunnables¶ÔÓ¦runnable
					ModelUser.removeResInf(deleteNum); //É¾³ýresourceInfÖÐ¶ÔÓ¦µÄresourceinf vector
					ModelUser.removeVector(deleteNum); //É¾³ývectorÁÐ±í´æ´¢¶ÔÓ¦ÁÐÐÅÏ¢µÄvector

					if (finishFlat.equals("false")) {//Èç¹ûÎÄ¼þÕýÔÚÏÂÔØ,É¾³ýÕýÔÚÏÂÔØÁÐ±í¶ÔÓ¦µÄËùÓÐÐÅÏ¢
						int deleteDLnum = ModelUser.getRowDL(src);
						ModelUser.removeRowDLModel(deleteDLnum);
						ModelUser.removeUrlDL(deleteDLnum);
						ModelUser.removeRunnableDL(deleteDLnum);
					} else {//ÎÄ¼þÒÑÍê³É
						int deleteFSnum = ModelUser.getRowFS(src);
						ModelUser.removeRowFSModel(deleteFSnum);
						ModelUser.removeUrlFS(deleteFSnum);
					}
				} else if (modelNum == 1) {//´ÓÕýÔÚÏÂÔØTableÉ¾³ý
					ModelUser.runnablesDL.get(deleteNum).setDestory(); //ÖÐÖ¹Ïß³Ì
					String src = ModelUser.getRowUrlDL(deleteNum); //ÌáÈ¡URL £¨È«¾ÖÎ¨Ò»£©
					//½«ÕýÔÚÏÂÔØ¶ÔÓ¦ÐÅÏ¢É¾³ý
					ModelUser.removeUrlDL(deleteNum);
					ModelUser.removeRowDLModel(deleteNum);
					ModelUser.removeRunnableDL(deleteNum);
					//É¾³ýÈ«²¿ÐÅÏ¢Table¶ÔÓ¦µÄÊý¾Ý
					int deleteNumAll = ModelUser.getRow(src);
					ModelUser.removeResInf(deleteNumAll);
					ModelUser.removeRow(deleteNumAll);
					ModelUser.removeRunnable(deleteNumAll);
					ModelUser.removeUrl(deleteNumAll);
					ModelUser.removeVector(deleteNumAll);
				} else {//´ÓÏÂÔØÍê³ÉTableÉ¾³ý
						//½«ÏÂÔØÍê³É¶ÔÓ¦ÐÅÏ¢É¾³ý
					String src = ModelUser.getRowUrlFS(deleteNum); //ÌáÈ¡URL £¨È«¾ÖÎ¨Ò»£©
					ModelUser.removeRowFSModel(deleteNum);
					ModelUser.removeUrlFS(deleteNum);
					//É¾³ýÈ«²¿ÐÅÏ¢Table¶ÔÓ¦µÄÊý¾Ý
					int deleteNumAll = ModelUser.getRow(src);
					ModelUser.removeResInf(deleteNumAll);
					ModelUser.removeRow(deleteNumAll);
					ModelUser.removeRunnable(deleteNumAll);
					ModelUser.removeUrl(deleteNumAll);
					ModelUser.removeVector(deleteNumAll);
				}
			}
		}
	}

	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		//µã»÷»»Æ¤·ô
		new SwitchSkin().setVisible(true);
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		//ÐÂ½¨ÏÂÔØ´¥·¢ÊÂ¼þ
		new NewDownload().setVisible(true);

	}

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//¿ªÊ¼°´Å¥´¥·¢ÊÂ¼þ
		int startNum = jTable1.getSelectedRow();
		if (startNum != -1) {
			if (modelNum == 0) {
				ModelUser.getRunn(startNum).restart();
				ModelUser.setValue("ÕýÔÚÏÂÔØ", startNum, 0);
				//Í¬Ê±Ë¢ÐÂÕýÔÚÏÂÔØ
				String src = ModelUser.getRowUrl(startNum);
				int index = ModelUser.getRowDL(src);
				ModelUser.setValueDLModel("ÕýÔÚÏÂÔØ", index, 0);
			} else if (modelNum == 1) {
				ModelUser.getRunnDL(startNum).restart();
				ModelUser.setValueDLModel("ÕýÔÚÏÂÔØ", startNum, 0);
				//Í¬Ê±Ë¢ÐÂÈ«²¿ÈÎÎñ
				String src = ModelUser.getRowUrlDL(startNum);
				int index = ModelUser.getRow(src);
				ModelUser.setValue("ÕýÔÚÏÂÔØ", index, 0);
			}
		}
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//ÕýÔÚÏÂÔØ´¥·¢ÊÂ¼þ
		jTable1.setModel(ModelUser.dateModelDownloading);
		modelNum = 1;
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//È«²¿ÈÎÎñ´¥·¢ÊÂ¼þ
		jTable1.setModel(ModelUser.dateModel);
		modelNum = 0;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainWindow().setVisible(true);
			}
		});
	}

	public static void setSkin() {
		((JImagePane) jPanel1).setBackgroundImage(image);
	}

	private void setWindowIcon() {
		Image windowIcon = Toolkit.getDefaultToolkit().getImage(
				"img/icon.png");
		setIconImage(windowIcon);
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JButton jButton9;
	private javax.swing.JComboBox jComboBox1;
	public static  javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JToolBar jToolBar1;
	private javax.swing.JToolBar jToolBar2;
	// End of variables declaration//GEN-END:variables

}